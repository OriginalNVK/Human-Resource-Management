ALTER SESSION SET CONTAINER= PDBQLDH;   
ALTER SESSION SET CURRENT_SCHEMA = pdb_admin;
-- Check OLS đã được áp dụng hay chưa
--SELECT * FROM v$option WHERE parameter = 'Oracle Label Security';

-- hoặc
--SELECT * FROM DBA_OLS_STATUS WHERE NAME = 'OLS_CONFIGURE_STATUS';

-- Nếu không được, connect SYS r chạy đoạn mã này trong SQL*PLUS
--@'?\rdbms\admin\catols.sql';

EXEC LBACSYS.CONFIGURE_OLS;

-- Enable OLS
EXEC LBACSYS.OLS_ENFORCEMENT.ENABLE_OLS;

--ALTER PLUGGABLE DATABASE PDBQLDH CLOSE IMMEDIATE;
--ALTER PLUGGABLE DATABASE PDBQLDH OPEN;

--ALTER SESSION SET CONTAINER = PDBQLDH;
--ALTER SESSION SET CURRENT_SCHEMA = pdb_admin;

GRANT EXECUTE ON LBACSYS.SA_SYSDBA TO pdb_admin;
GRANT EXECUTE ON LBACSYS.SA_LABEL_ADMIN TO pdb_admin;
GRANT EXECUTE ON LBACSYS.SA_USER_ADMIN TO pdb_admin;
GRANT EXECUTE ON LBACSYS.SA_COMPONENTS TO pdb_admin;
GRANT INHERIT PRIVILEGES ON USER LBACSYS TO PDB_ADMIN;
GRANT LBAC_DBA TO pdb_admin;
GRANT EXECUTE ON SA_SYSDBA TO PDB_ADMIN;
GRANT EXECUTE ON SA_LABEL_ADMIN TO pdb_admin;
GRANT EXECUTE ON SA_USER_ADMIN TO pdb_admin;
GRANT EXECUTE ON SA_COMPONENTS TO pdb_admin;

GRANT INHERIT PRIVILEGES ON USER SYS TO LBACSYS;
GRANT INHERIT PRIVILEGES ON USER PDB_ADMIN TO LBACSYS;

-- Có thể cần thêm:
GRANT EXECUTE ON DBMS_MACUTL TO pdb_admin;
-- Tạo bảng chứa thông báo
CONN PDB_ADMIN/123@localhost:1521/PDBQLDH;
CREATE TABLE QLDH_THONGBAO (
    MATB NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    ND VARCHAR2(1000)
);

-- DROP TABLE pdb_admin.QLDH_THONGBAO

-- Tạo policy
CONN PDB_ADMIN/123@localhost:1521/PDBQLDH;
BEGIN
    SA_SYSDBA.CREATE_POLICY(
      policy_name => 'NOTICE_POLICY',
      default_options => 'NO_CONTROL'
    );
END;

-- EXEC SA_SYSDBA.DROP_POLICY('NOTICE_POLICY');

-- Tạo các thành phần
    -- 1. Cấp bậc (Level)
CONN PDB_ADMIN/123@localhost:1521/PDBQLDH;
EXEC SA_COMPONENTS.CREATE_LEVEL('NOTICE_POLICY', 100, 'SV', 'Sinh viên');
EXEC SA_COMPONENTS.CREATE_LEVEL('NOTICE_POLICY', 200, 'NV', 'Nhân viên');
EXEC SA_COMPONENTS.CREATE_LEVEL('NOTICE_POLICY', 300, 'TRGDV', 'Trưởng đơn vị');

  -- 2. Lĩnh vực (Compartment)
EXEC SA_COMPONENTS.CREATE_COMPARTMENT('NOTICE_POLICY', 1, 'TOAN', 'Toán');
EXEC SA_COMPONENTS.CREATE_COMPARTMENT('NOTICE_POLICY', 2, 'LY', 'Lý');
EXEC SA_COMPONENTS.CREATE_COMPARTMENT('NOTICE_POLICY', 3, 'HOA', 'Hóa');
EXEC SA_COMPONENTS.CREATE_COMPARTMENT('NOTICE_POLICY', 4, 'HANHCHINH', 'Hành chính');

  -- 3. Cơ sở (Group)
EXEC SA_COMPONENTS.CREATE_GROUP('NOTICE_POLICY', 10, 'CS1', 'Cơ sở 1');
EXEC SA_COMPONENTS.CREATE_GROUP('NOTICE_POLICY', 20, 'CS2', 'Cơ sở 2');

-- Tạo các LABEL theo yêu cầu
-----------------------------------------
-- Đối với người dùng
CONN PDB_ADMIN/123@localhost:1521/PDBQLDH;
BEGIN
  -- u1 & t1: Liên quan tới tất cả trưởng đơn vị
  SA_LABEL_ADMIN.CREATE_LABEL('NOTICE_POLICY', 1000, 'TRGDV:TOAN,LY,HOA,HANHCHINH:CS1,CS2', TRUE);
  
  -- u2: Liên quan đến trưởng đơn vị phụ trách khoa Hóa tại cơ sở 2
  SA_LABEL_ADMIN.CREATE_LABEL('NOTICE_POLICY', 1001, 'TRGDV:HOA:CS2', TRUE);
  
  -- u3: Liên quan đến trưởng đơn vị phụ trách khoa Hóa tại cơ sở 2
  SA_LABEL_ADMIN.CREATE_LABEL('NOTICE_POLICY', 1002, 'TRGDV:LY:CS2', TRUE);
  
  -- u4: Liên quan đến nhân viên thuộc khoa Hóa tại cơ sở 2
  SA_LABEL_ADMIN.CREATE_LABEL('NOTICE_POLICY', 1003, 'NV:HOA:CS2', TRUE);
  
  -- u5 & t5: Liên quan đến sinh viên khoa Hóa tại cơ sở 2
  SA_LABEL_ADMIN.CREATE_LABEL('NOTICE_POLICY', 1004, 'SV:HOA:CS2', TRUE);
  
  -- u6: Trưởng đơn vị có thể đọc được các thông báo về Hành chính.
  SA_LABEL_ADMIN.CREATE_LABEL('NOTICE_POLICY', 1005, 'TRGDV:HANHCHINH:CS1,CS2', TRUE);
  
  -- u7 & t2 & t7: Nhân viên có thể đọc toàn bộ thông báo dành cho tất cả nhân viên
  SA_LABEL_ADMIN.CREATE_LABEL('NOTICE_POLICY', 1006, 'NV:TOAN,LY,HOA,HANHCHINH:CS1,CS2', TRUE);
  
  -- u8: Nhân viên có thể đọc thông báo về Hành chính tại cơ sở 1
  SA_LABEL_ADMIN.CREATE_LABEL('NOTICE_POLICY', 1007, 'NV:HANHCHINH:CS1', TRUE);
END;
/

BEGIN
  -- SA_LABEL_ADMIN.CREATE_LABEL('NOTICE_POLICY', 2000, 'TRGDV', TRUE);
  -- SA_LABEL_ADMIN.CREATE_LABEL('NOTICE_POLICY', 2001, 'NV', TRUE);
  
  -- t3: Cần phát tán đến tất cả sinh viên
  SA_LABEL_ADMIN.CREATE_LABEL('NOTICE_POLICY', 2002, 'SV', TRUE);
  
  -- t4: Cần phát tán đến sinh viên thuộc khoa Hóa ở cơ sở 1
  SA_LABEL_ADMIN.CREATE_LABEL('NOTICE_POLICY', 2003, 'SV:HOA:CS1', TRUE);
  
  -- SA_LABEL_ADMIN.CREATE_LABEL('NOTICE_POLICY', 2004, 'SV:HOA:CS2', TRUE);
  
  -- t6: Cần phát tán đến sinh viên thuộc khoa Hóa ở cả hai cơ sở
  SA_LABEL_ADMIN.CREATE_LABEL('NOTICE_POLICY', 2005, 'SV:HOA:CS1,CS2', TRUE);
  
  -- SA_LABEL_ADMIN.CREATE_LABEL('NOTICE_POLICY', 2006, 'SV:TOAN,LY,HOA:CS1,CS2', TRUE);
  
  -- t8: Cần phát tán đến trưởng khoa Hóa ở cơ sở 1
  SA_LABEL_ADMIN.CREATE_LABEL('NOTICE_POLICY', 2007, 'TRGDV:HOA:CS1', TRUE);
  
  -- t9: Cần phát tán đến trưởng khoa Hóa ở cơ sở 1 và cơ sở 2
  SA_LABEL_ADMIN.CREATE_LABEL('NOTICE_POLICY', 2008, 'TRGDV:HOA:CS1,CS2', TRUE);
END;
/

-- Áp dụng chính sách
CONN PDB_ADMIN/123@localhost:1521/PDBQLDH;
BEGIN
  SA_POLICY_ADMIN.APPLY_TABLE_POLICY (
    policy_name    => 'NOTICE_POLICY',
    schema_name    => 'PDB_ADMIN',
    table_name     => 'QLDH_THONGBAO',
    table_options => 'READ_CONTROL'
  );
END;
/

SET SERVEROUTPUT ON;
-- Gán label cho user
-- Cách 2: Gán trực tiếp (Bug nếu như Label chưa được tạo
CREATE OR REPLACE PROCEDURE GRANT_LABEL_FOR_USER(
    p_username   IN VARCHAR2,
    p_role       IN VARCHAR2,
    p_khoa       IN VARCHAR2,
    p_coso       IN VARCHAR2
) IS   
    v_max_label_str VARCHAR2(200);
BEGIN
    IF p_role = 'TRGDV' THEN
        -- Trưởng đơn vị: được truy cập toàn bộ các đơn vị ở cả hai cơ sở
        v_max_label_str := 'TRGDV:TOAN,LY,HOA,HANHCHINH:CS1,CS2';
        
    ELSIF p_role = 'NV' THEN
        -- Nhân viên: được truy cập toàn bộ các đơn vị ở cả hai cơ sở
        v_max_label_str := 'NV:' || UPPER(TRIM(p_khoa)) || ':' || UPPER(TRIM(p_coso));

    ELSIF p_role = 'SV' THEN
        -- Sinh viên: chỉ được đọc và ghi trong đúng khoa và cơ sở của mình
        v_max_label_str := 'SV:' || UPPER(TRIM(p_khoa)) || ':' || UPPER(TRIM(p_coso));

    ELSE
        DBMS_OUTPUT.PUT_LINE('Vai trò không xác định: ' || p_role);
        RETURN;
    END IF;

    -- Gán nhãn cho user
    SA_USER_ADMIN.SET_USER_LABELS(
        policy_name     => 'NOTICE_POLICY',
        user_name       => UPPER(TRIM(p_username)),
        max_read_label  => v_max_label_str
    );

    COMMIT;

EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Lỗi: ' || SQLERRM);
        ROLLBACK;
        RAISE;
END GRANT_LABEL_FOR_USER;
/


-- Cách 3: Kiểm tra theo danh sách tĩnh
CONN PDB_ADMIN/123@localhost:1521/PDBQLDH;
CREATE OR REPLACE PROCEDURE GRANT_LABEL_FOR_USER(
    p_username   IN VARCHAR2,
    p_role       IN VARCHAR2,
    p_khoa       IN VARCHAR2,
    p_coso       IN VARCHAR2
) IS
    v_max_label_str   VARCHAR2(100);
    v_label_to_check  VARCHAR2(100);
BEGIN
    -- Xây dựng label theo role
    IF p_role = 'TRGDV' THEN
        v_label_to_check := 'TRGDV:TOAN,LY,HOA,HANHCHINH:CS1,CS2';
    ELSIF p_role = 'NV' THEN
        v_label_to_check := 'NV:' || p_khoa || ':' || p_coso;
    ELSIF p_role = 'SV' THEN
        v_label_to_check := 'SV:' || p_khoa || ':' || p_coso;
    ELSE
        DBMS_OUTPUT.PUT_LINE('Vai trò không xác định: ' || p_role);
        RETURN;
    END IF;

    -- Kiểm tra nhãn hợp lệ theo danh sách tĩnh
    IF v_label_to_check NOT IN (
        'TRGDV:TOAN,LY,HOA,HANHCHINH:CS1,CS2',
        'TRGDV:HOA:CS2',
        'TRGDV:LY:CS2',
        'NV:HOA:CS2',
        'SV:HOA:CS2',
        'TRGDV:HANHCHINH:CS1,CS2',
        'NV:TOAN,LY,HOA,HANHCHINH:CS1,CS2',
        'NV:HANHCHINH:CS1',
        'SV',
        'SV:HOA:CS1',
        'SV:HOA:CS1,CS2',
        'TRGDV:HOA:CS1',
        'TRGDV:HOA:CS1,CS2'
    ) THEN
        DBMS_OUTPUT.PUT_LINE('Không tồn tại role này: ' || v_label_to_check);
        RETURN;
    ELSE
        v_max_label_str := v_label_to_check;

        SA_USER_ADMIN.SET_USER_LABELS(
            policy_name     => 'NOTICE_POLICY',
            user_name       => p_username,
            max_read_label  => v_label_to_check
        );

        DBMS_OUTPUT.PUT_LINE('Đã gán label thành công cho user: ' || p_username);
        COMMIT;
    END IF;

EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Lỗi: ' || SQLERRM);
        ROLLBACK;
        RAISE;
END GRANT_LABEL_FOR_USER;
/

/*
SELECT column_name, data_type FROM ALL_TAB_COLUMNS 
WHERE owner = 'PDB_ADMIN' AND table_name = 'QLDH_THONGBAO';

SELECT * FROM ALL_SA_TABLE_POLICIES 
WHERE schema_name = 'PDB_ADMIN' AND table_name = 'QLDH_THONGBAO';

SELECT *
FROM all_objects
WHERE object_type = 'PROCEDURE'
  AND object_name = 'GRANT_LABEL_FOR_USER';
  
SELECT * FROM DBA_SA_LABELS WHERE POLICY_NAME = 'NOTICE_POLICY'

SELECT TEXT 
FROM ALL_SOURCE 
WHERE NAME = 'GRANT_LABEL_FOR_USER' 
AND OWNER = 'PDB_ADMIN' 
AND TYPE = 'PROCEDURE'
ORDER BY LINE;
*/

-- Dữ liệu mẫu cho thông báo
CONN PDB_ADMIN/123@localhost:1521/PDBQLDH;
INSERT INTO pdb_admin.QLDH_THONGBAO(ND, NOTICE_POLICY_COL) VALUES (
            'Test thong bao cho truong don vi khoa Hoa co so 1', 
            CHAR_TO_LABEL('NOTICE_POLICY', 'TRGDV:HOA:CS2'));
            
INSERT INTO pdb_admin.QLDH_THONGBAO(ND, NOTICE_POLICY_COL) VALUES (
            'Test thong bao cho nhan vien', 
            CHAR_TO_LABEL('NOTICE_POLICY', 'NV:HOA:CS2'));
            
INSERT INTO pdb_admin.QLDH_THONGBAO(ND, NOTICE_POLICY_COL) VALUES (
            'Test thong bao cho sinh vien', 
            CHAR_TO_LABEL('NOTICE_POLICY', 'SV:HOA:CS1,CS2'));

-- Kiểm tra lại
--SELECT * FROM LBACSYS.DBA_SA_USER_LABELS 
--WHERE USER_NAME = 'TRGDV_OLS';

-- SELECT * FROM PDB_ADMIN.QLDH_THONGBAO;

-- SELECT * FROM ALL_SA_TABLE_POLICIES WHERE TABLE_NAME = 'QLDH_THONGBAO';
-- Kiểm tra các label
/*SELECT *
FROM   ALL_SA_LABELS
WHERE  POLICY_NAME = 'NOTICE_POLICY'
ORDER BY LABEL_TAG;*/
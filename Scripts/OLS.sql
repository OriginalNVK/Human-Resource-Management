ALTER SESSION SET CONTAINER= PDBQLDH;   
ALTER SESSION SET CURRENT_SCHEMA = pdb_admin;

GRANT EXECUTE ON LBACSYS.SA_SYSDBA TO pdb_admin;
GRANT EXECUTE ON LBACSYS.SA_LABEL_ADMIN TO pdb_admin;
GRANT EXECUTE ON LBACSYS.SA_USER_ADMIN TO pdb_admin;
GRANT INHERIT PRIVILEGES ON USER LBACSYS TO pdb_admin;
GRANT LBAC_DBA TO pdb_admin;

SELECT * FROM v$option WHERE parameter = 'Oracle Label Security';

--ALTER SESSION SET CONTAINER = CDB$ROOT;
--EXEC LBACSYS.CONFIGURE_OLS;
--EXEC LBACSYS.OLS_ENFORCEMENT.ENABLE_OLS;

-- Có thể cần thêm:
GRANT EXECUTE ON DBMS_MACUTL TO pdb_admin;
-- Tạo bảng chứa thông báo
CREATE TABLE QLDH_THONGBAO (
    MATB NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    ND VARCHAR2(1000),
    NHAN VARCHAR2(30)
);

SELECT username FROM dba_users WHERE username = 'LBACSYS';

ALTER SESSION SET CURRENT_SCHEMA = pdb_admin;

CONN PDB_ADMIN/123@localhost:1521/PDBQLDH
-- Tạo policy
BEGIN
    SA_SYSDBA.CREATE_POLICY(
      policy_name => 'NOTICE_POLICY',
      column_name => 'NHAN',
      default_options => 'LABEL_DEFAULT'
    );
END;

-- Kiểm tra quyền INHERIT PRIVILEGES
SELECT * FROM DBA_TAB_PRIVS 
WHERE PRIVILEGE = 'INHERIT PRIVILEGES' AND GRANTEE = 'PDB_ADMIN';

SELECT * FROM DBA_TAB_PRIVS 
WHERE PRIVILEGE = 'INHERIT PRIVILEGES' AND GRANTEE = 'SYS'; -- => Không có, nên phải về Root để gán quyền

ALTER SESSION SET CONTAINER = CDB$ROOT;
SHOW CON_NAME;

ALTER SESSION SET CONTAINER = PDBQLDH;
ALTER SESSION SET CURRENT_SCHEMA = pdb_admin;

GRANT INHERIT PRIVILEGES ON USER LBACSYS TO SYS;

CONN sys/"Chien@240804"@localhost:1521/CDB$ROOT AS SYSDBA;
ALTER SESSION SET CONTAINER= CDB$ROOT;   
SELECT grantee, grantor, privilege
FROM dba_inherit_privileges
WHERE grantee = 'PDB_ADMIN' AND grantor = 'LBACSYS';

-- Tạo các thành phần
BEGIN
    -- 1. Cấp bậc (Level)
  SA_LABEL_ADMIN.CREATE_LEVEL('THONGBAO_POLICY', 100, 'SV', 'Sinh viên');
  SA_LABEL_ADMIN.CREATE_LEVEL('THONGBAO_POLICY', 200, 'NV', 'Nhân viên');
  SA_LABEL_ADMIN.CREATE_LEVEL('THONGBAO_POLICY', 300, 'TRGDV', 'Trưởng đơn vị');

  -- 2. Lĩnh vực (Compartment)
  SA_LABEL_ADMIN.CREATE_COMPARTMENT('THONGBAO_POLICY', 1, 'TOAN', 'Toán');
  SA_LABEL_ADMIN.CREATE_COMPARTMENT('THONGBAO_POLICY', 2, 'LY', 'Lý');
  SA_LABEL_ADMIN.CREATE_COMPARTMENT('THONGBAO_POLICY', 3, 'HOA', 'Hóa');
  SA_LABEL_ADMIN.CREATE_COMPARTMENT('THONGBAO_POLICY', 4, 'HANHCHINH', 'Hành chính');

  -- 3. Cơ sở (Group)
  SA_LABEL_ADMIN.CREATE_GROUP('THONGBAO_POLICY', 10, 'CS1', 'Cơ sở 1');
  SA_LABEL_ADMIN.CREATE_GROUP('THONGBAO_POLICY', 20, 'CS2', 'Cơ sở 2');
END;

-- Tạo các LABEL theo yêu cầu
-----------------------------------------
-- Đối với người dùng
BEGIN
    -- u1: Trưởng đơn vị có thể đọc toàn bộ thông báo
    SA_LABEL_ADMIN.CREATE_LABEL('THONGBAO_POLICY', 1000, 'U1_TRGDV_ALL', 'TRGDV');
    
    -- u2: Trưởng khoa Hóa tại cơ sở 2
    SA_LABEL_ADMIN.CREATE_LABEL('THONGBAO_POLICY', 1001, 'U2_TRGDV_HOA_CS2', 'TRGDV:HOA:CS2');
    
    -- u3: Trưởng khoa Lý tại cơ sở 2
    SA_LABEL_ADMIN.CREATE_LABEL('THONGBAO_POLICY', 1002, 'U3_TRGDV_LY_CS2', 'TRGDV:LY:CS2');
    
    -- u4: Nhân viên khoa Hóa tại cơ sở 2
    SA_LABEL_ADMIN.CREATE_LABEL('THONGBAO_POLICY', 1003, 'U4_NV_HOA_CS2', 'NV:HOA:CS2');
    
    -- u5: Sinh viên khoa Hóa tại cơ sở 2
    SA_LABEL_ADMIN.CREATE_LABEL('THONGBAO_POLICY', 1004, 'U5_SV_HOA_CS2', 'SV:HOA:CS2');
    
    -- u6: Trưởng đơn vị có thể đọc thông báo về Hành chính (mọi cơ sở)
    SA_LABEL_ADMIN.CREATE_LABEL('THONGBAO_POLICY', 1005, 'U6_TRGDV_HC', 'TRGDV:HANHCHINH');
    
    -- u7: Nhân viên có thể đọc toàn bộ thông báo dành cho tất cả nhân viên
    SA_LABEL_ADMIN.CREATE_LABEL('THONGBAO_POLICY', 1006, 'U7_NV_ALL', 'NV');
   
    -- u8: Nhân viên đọc thông báo Hành chính tại cơ sở 1
    SA_LABEL_ADMIN.CREATE_LABEL('THONGBAO_POLICY', 1007, 'U8_NV_HC_CS1', 'NV:HANHCHINH:CS1');
END;

-----------------------------------------
-- Đối với dữ liệu
BEGIN
  -- t1: Gửi đến tất cả trưởng đơn vị
  SA_LABEL_ADMIN.CREATE_LABEL('THONGBAO_POLICY', 2000, 'T1_TO_ALL_TRGDV', 'TRGDV');

  -- t2: Gửi đến tất cả nhân viên
  SA_LABEL_ADMIN.CREATE_LABEL('THONGBAO_POLICY', 2001, 'T2_TO_ALL_NV', 'NV');

  -- t3: Gửi đến tất cả sinh viên
  SA_LABEL_ADMIN.CREATE_LABEL('THONGBAO_POLICY', 2002, 'T3_TO_ALL_SV', 'SV');

  -- t4: Sinh viên khoa Hóa ở cơ sở 1
  SA_LABEL_ADMIN.CREATE_LABEL('THONGBAO_POLICY', 2003, 'T4_SV_HOA_CS1', 'SV:HOA:CS1');

  -- t5: Sinh viên khoa Hóa ở cơ sở 2
  SA_LABEL_ADMIN.CREATE_LABEL('THONGBAO_POLICY', 2004, 'T5_SV_HOA_CS2', 'SV:HOA:CS2');

  -- t6: Sinh viên khoa Hóa ở cả hai cơ sở → có thể cần tạo hai nhãn riêng biệt hoặc dùng `CS1,CS2` nếu cho phép
  SA_LABEL_ADMIN.CREATE_LABEL('THONGBAO_POLICY', 2005, 'T6_SV_HOA_ALL_CS', 'SV:HOA:CS1,CS2');

  -- t7: Sinh viên ở cả hai cơ sở
  SA_LABEL_ADMIN.CREATE_LABEL('THONGBAO_POLICY', 2006, 'T7_SV_ALL_CS', 'SV::CS1,CS2');

  -- t8: Trưởng khoa Hóa ở cơ sở 1
  SA_LABEL_ADMIN.CREATE_LABEL('THONGBAO_POLICY', 2007, 'T8_TRGDV_HOA_CS1', 'TRGDV:HOA:CS1');

  -- t9: Trưởng khoa Hóa ở cả 2 cơ sở
  SA_LABEL_ADMIN.CREATE_LABEL('THONGBAO_POLICY', 2008, 'T9_TRGDV_HOA_ALL_CS', 'TRGDV:HOA:CS1,CS2');
END;
/

-- Gán label cho user
CREATE OR REPLACE PROCEDURE GRANT_LABEL_FOR_USER(
    p_username   IN VARCHAR2,
    p_role       IN VARCHAR2,
    p_khoa       IN VARCHAR2,
    p_coso       IN VARCHAR2
) IS  
    v_label_id      NUMBER;
    v_max_level     NUMBER;
    v_labels        VARCHAR2(100);
    v_is_phong      BOOLEAN := FALSE;
BEGIN
    -- Xác định xem là phòng hay khoa dựa vào bảng QLDH_DONVI
    SELECT CASE 
               WHEN COSO IS NULL THEN TRUE
               ELSE FALSE
           END INTO v_is_phong
    FROM QLDH_DONVI
    WHERE MADV = p_khoa;

    -- Logic cấp label
    IF p_role = 'TRGĐV' THEN
        IF p_khoa = 'PH03' THEN
            -- u6: Trưởng phòng hành chính đọc thông báo hành chính
            v_label_id := 1005;
            v_max_level := 300;
            v_labels := '1008';

        ELSIF NOT v_is_phong AND p_khoa = 'KH06_2' AND p_coso = 'CS2' THEN
            v_label_id := 1001; -- u2: Trưởng khoa Hóa CS2
            v_max_level := 300;
            v_labels := '1001';

        ELSIF NOT v_is_phong AND p_khoa = 'KH05_2' AND p_coso = 'CS2' THEN
            v_label_id := 1002; -- u3: Trưởng khoa Lý CS2
            v_max_level := 300;
            v_labels := '1002';

        ELSE
            -- Trưởng đơn vị toàn trường => u1
            v_label_id := 1000;
            v_max_level := 300;
            v_labels := '1000';
        END IF;

    ELSIF p_role = 'NV' THEN
        IF p_khoa = 'PH03' AND p_coso = 'CS1' THEN
            -- u8: Nhân viên phòng hành chính CS1
            v_label_id := 1007;
            v_max_level := 200;
            v_labels := '1007';

        ELSIF NOT v_is_phong AND p_khoa = 'KH01' AND p_coso = 'CS2' THEN
            -- u4: Nhân viên khoa Hóa CS2
            v_label_id := 1003;
            v_max_level := 200;
            v_labels := '1003';

        ELSE
            -- u7: Nhân viên toàn trường
            v_label_id := 1006;
            v_max_level := 200;
            v_labels := '1006';
        END IF;

    ELSIF p_role = 'SV' THEN
        IF NOT v_is_phong AND p_khoa = 'KH01' AND p_coso = 'CS2' THEN
            v_label_id := 1004; -- u5: Sinh viên Hóa CS2
            v_max_level := 100;
            v_labels := '1004';
        ELSE
            -- Sinh viên khác
            v_label_id := 1004;
            v_max_level := 100;
            v_labels := '1004';
        END IF;

    ELSE
        -- Trường hợp không xác định rõ vai trò
        v_label_id := 9999;
        v_max_level := 50;
        v_labels := '9999';
    END IF;

    -- Gán label cho user
    SA_USER_ADMIN.SET_USER_LABELS(
        policy_name   => 'THONGBAO_POLICY',
        user_name     => p_username,
        max_level     => v_max_level,
        default_level => v_label_id,
        row_level     => v_label_id,
        labels        => v_labels
    );

    COMMIT;

EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('Lỗi: Không tìm thấy MADV trong QLDH_DONVI.');
        ROLLBACK;
    WHEN OTHERS THEN
        ROLLBACK;
        RAISE;
END GRANT_LABEL_FOR_USER;
/







